FROM {{base_image}} as {{tool_name}}-{{target_name}}

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Shanghai
# HTTPS_PROXY 和 LLM_API_KEY 将通过docker-compose或docker run传入

# 安装依赖
RUN apt-get update && apt-get install -y \
    build-essential gcc g++ make cmake git wget curl \
    python3 python3-pip libtool autoconf automake bison \
    libglib2.0-dev libpixman-1-dev clang llvm pkg-config \
    {{target_dependencies}} \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /opt/fuzzing

# 克隆并编译工具
RUN git clone {{tool_repo}} tools/{{tool_name}}
WORKDIR /opt/fuzzing/tools/{{tool_name}}
{{tool_build_commands}}

# 克隆A2工具（提供输入文件和规范文件）
WORKDIR /opt/fuzzing
RUN git clone git@github.com:susu3/A2.git A2

# 复制目标程序
COPY {{target_source_path}} /opt/fuzzing/targets/{{target_name}}/
WORKDIR /opt/fuzzing/targets/{{target_name}}

# 设置目标特定的环境变量
{{target_environment_vars}}

# 目标编译前的准备命令
{{target_pre_build_commands}}

# 编译目标程序
{{target_build_commands}}

# 编译后处理命令
{{target_post_build_commands}}

# 设置PATH
ENV PATH="/opt/fuzzing/tools/{{tool_name}}:$PATH"

# 创建运行脚本
RUN echo '#!/bin/bash\n\
set -e\n\
cd /opt/fuzzing/targets/{{target_name}}\n\
RUN_NUMBER=${RUN_NUMBER:-1}\n\
OUTPUT_DIR="/opt/fuzzing/results/{{tool_name}}-out-{{target_name}}-${RUN_NUMBER}"\n\
mkdir -p "$OUTPUT_DIR"\n\
echo "Starting {{tool_name}} fuzzing for {{target_name}}, run #${RUN_NUMBER}"\n\
echo "Output directory: $OUTPUT_DIR"\n\
echo "Command: {{fuzz_command}}"\n\
exec {{fuzz_command}}' > /opt/fuzzing/run_experiment.sh && \
    chmod +x /opt/fuzzing/run_experiment.sh

# 创建24小时超时脚本
RUN echo '#!/bin/bash\n\
echo "Starting 24-hour fuzzing session..."\n\
timeout 24h /opt/fuzzing/run_experiment.sh\n\
EXIT_CODE=$?\n\
if [ $EXIT_CODE -eq 124 ]; then\n\
    echo "Fuzzing completed after 24 hours (timeout)"\n\
else\n\
    echo "Fuzzing ended with exit code: $EXIT_CODE"\n\
fi\n\
echo "Fuzzing session finished at $(date)"' > /opt/fuzzing/run_24h.sh && \
    chmod +x /opt/fuzzing/run_24h.sh

# 设置权限
RUN chown -R fuzzer:fuzzer /opt/fuzzing
USER fuzzer

# 保持容器运行
CMD ["/opt/fuzzing/run_24h.sh"]
